{
  "variables": {
    "profile": "",
    "aws_subnet_id": "",
    "root_volume_size": "20",
    "tmp_dir": "/tmp/shinesolutions/packer-aem",
    "https_proxy": "",
    "no_proxy": "",
    "component": "",
    "http_proxy": "",
    "aws_region": "ap-southeast-2",
    "iam_instance_profile": "",
    "ami_users": "",
    "data_volume_size": "50",
    "aws_security_group_id": "",
    "puppet_bin_dir": "/opt/puppetlabs/bin",
    "version": "x.x.x",
    "custom_stage_run_info": "{{env `CUSTOM_STAGE_RUN_INFO`}}",
    "source_ami": "",
    "instance_type": "",
    "aws_user": "ec2-user",
    "os_type": "",
    "aws_vpc_id": ""
  },
  "provisioners": [
    {
      "inline": [
        "sudo mount -t tmpfs tmpfs /tmp",
        "mkdir -p {{user `tmp_dir`}}"
      ],
      "type": "shell"
    },
    {
      "source": "stage/custom/",
      "destination": "{{user `tmp_dir`}}",
      "type": "file"
    },
    {
      "type": "shell",
      "execute_command": "{{ .Vars }} sudo -E bash {{ .Path }}",
      "environment_vars": [
        "PUPPET_BIN_DIR={{user `puppet_bin_dir`}}",
        "http_proxy={{user `http_proxy`}}",
        "HTTP_PROXY={{user `http_proxy`}}",
        "https_proxy={{user `https_proxy`}}",
        "HTTPS_PROXY={{user `https_proxy`}}",
        "no_proxy={{user `no_proxy`}}",
        "NO_PROXY={{user `no_proxy`}}"
      ],
      "script": "provisioners/bash/{{user `os_type`}}.sh"
    },
    {
      "source": "conf/",
      "destination": "{{user `tmp_dir`}}",
      "type": "file"
    },
    {
      "type": "puppet-masterless",
      "puppet_bin_dir": "{{user `puppet_bin_dir`}}",
      "execute_command": "export http_proxy={{user `http_proxy`}} && export HTTP_PROXY={{user `http_proxy`}} && export https_proxy={{user `https_proxy`}} && export HTTPS_PROXY={{user `https_proxy`}} && export no_proxy={{user `no_proxy`}} && export NO_PROXY={{user `no_proxy`}} && cd {{.WorkingDir}} && {{.FacterVars}}{{if .Sudo}} sudo -E {{end}} {{.PuppetBinDir}}/puppet apply --verbose --modulepath='{{.ModulePath}}' {{if ne .HieraConfigPath \"\"}}--hiera_config='{{.HieraConfigPath}}' {{end}} {{if ne .ExtraArguments \"\"}}{{.ExtraArguments}} {{end}} --detailed-exitcodes {{.ManifestFile}}",
      "manifest_file": "provisioners/puppet/manifests/config.pp",
      "module_paths": [
        "provisioners/puppet/modules"
      ]
    },
    {
      "hiera_config_path": "conf/hiera.yaml",
      "manifest_file": "provisioners/puppet/manifests/custom_stage_pre.pp",
      "module_paths": [
        "modules",
        "provisioners/puppet/modules"
      ],
      "execute_command": "export FACTER_component={{user `component`}} && export FACTER_custom_stage_run_info=\"{{user `custom_stage_run_info`}}\" && export http_proxy={{user `http_proxy`}} && export HTTP_PROXY={{user `http_proxy`}} && export https_proxy={{user `https_proxy`}} && export HTTPS_PROXY={{user `https_proxy`}} && export no_proxy={{user `no_proxy`}} && export NO_PROXY={{user `no_proxy`}} && cd {{.WorkingDir}} && {{.FacterVars}}{{if .Sudo}} sudo -E {{end}} {{.PuppetBinDir}}/puppet apply --verbose --modulepath='{{.ModulePath}}' {{if ne .HieraConfigPath \"\"}}--hiera_config='{{.HieraConfigPath}}' {{end}} {{if ne .ExtraArguments \"\"}}{{.ExtraArguments}} {{end}} --detailed-exitcodes {{.ManifestFile}}",
      "puppet_bin_dir": "{{user `puppet_bin_dir`}}",
      "extra_arguments": [],
      "type": "puppet-masterless"
    },
    {
      "hiera_config_path": "conf/hiera.yaml",
      "manifest_file": "provisioners/puppet/manifests/{{user `component`}}.pp",
      "module_paths": [
        "modules",
        "provisioners/puppet/modules"
      ],
      "execute_command": "export FACTER_component={{user `component`}} && export http_proxy={{user `http_proxy`}} && export HTTP_PROXY={{user `http_proxy`}} && export https_proxy={{user `https_proxy`}} && export HTTPS_PROXY={{user `https_proxy`}} && export no_proxy={{user `no_proxy`}} && export NO_PROXY={{user `no_proxy`}} && cd {{.WorkingDir}} && {{.FacterVars}}{{if .Sudo}} sudo -E {{end}} {{.PuppetBinDir}}/puppet apply --verbose --modulepath='{{.ModulePath}}' {{if ne .HieraConfigPath \"\"}}--hiera_config='{{.HieraConfigPath}}' {{end}} {{if ne .ExtraArguments \"\"}}{{.ExtraArguments}} {{end}} --detailed-exitcodes {{.ManifestFile}}",
      "puppet_bin_dir": "{{user `puppet_bin_dir`}}",
      "extra_arguments": [],
      "type": "puppet-masterless"
    },
    {
      "hiera_config_path": "conf/hiera.yaml",
      "manifest_file": "provisioners/puppet/manifests/custom_stage_post.pp",
      "module_paths": [
        "modules",
        "provisioners/puppet/modules"
      ],
      "execute_command": "export FACTER_component={{user `component`}} && export FACTER_custom_stage_run_info=\"{{user `custom_stage_run_info`}}\" && export http_proxy={{user `http_proxy`}} && export HTTP_PROXY={{user `http_proxy`}} && export https_proxy={{user `https_proxy`}} && export HTTPS_PROXY={{user `https_proxy`}} && export no_proxy={{user `no_proxy`}} && export NO_PROXY={{user `no_proxy`}} && cd {{.WorkingDir}} && {{.FacterVars}}{{if .Sudo}} sudo -E {{end}} {{.PuppetBinDir}}/puppet apply --verbose --modulepath='{{.ModulePath}}' {{if ne .HieraConfigPath \"\"}}--hiera_config='{{.HieraConfigPath}}' {{end}} {{if ne .ExtraArguments \"\"}}{{.ExtraArguments}} {{end}} --detailed-exitcodes {{.ManifestFile}}",
      "puppet_bin_dir": "{{user `puppet_bin_dir`}}",
      "extra_arguments": [],
      "type": "puppet-masterless"
    },
    {
      "source": "test/inspec",
      "destination": "{{user `tmp_dir`}}",
      "type": "file"
    },
    {
      "inline": [
        "set -o nounset",
        "set -o errexit",
        "export PATH=/opt/puppetlabs/puppet/bin/:/sbin:/usr/sbin:/usr/local/sbin:${PATH}",
        "cd {{user `tmp_dir`}}/inspec",
        "inspec exec base_spec.rb; inspec exec aem_base_spec.rb; inspec exec {{user `component`}}_spec.rb"
      ],
      "type": "shell",
      "environment_vars": [
        "FACTER_packer_build_name={{user `component`}}",
        "FACTER_packer_staging_dir={{user `tmp_dir`}}",
        "http_proxy={{user `http_proxy`}}",
        "HTTP_PROXY={{user `http_proxy`}}",
        "https_proxy={{user `https_proxy`}}",
        "HTTPS_PROXY={{user `https_proxy`}}",
        "no_proxy={{user `no_proxy`}}",
        "NO_PROXY={{user `no_proxy`}}"
      ]
    },
    {
      "inline": [
        "sudo rm -rf {{user `tmp_dir`}}",
        "sudo /opt/puppetlabs/bin/facter resource host $(facter fqdn) ensure=absent",
        "sudo -E find /root /home -type f \\( -name authorized_keys -o -name .bash_history \\) -print -delete",
        "sudo truncate --size 0 --no-create /var/log/wtmp /var/log/btmp"
      ],
      "type": "shell",
      "environment_vars": [
        "HISTFILE=/dev/null",
        "http_proxy={{user `http_proxy`}}",
        "HTTP_PROXY={{user `http_proxy`}}",
        "https_proxy={{user `https_proxy`}}",
        "HTTPS_PROXY={{user `https_proxy`}}",
        "no_proxy={{user `no_proxy`}}",
        "NO_PROXY={{user `no_proxy`}}"
      ]
    }
  ],
  "builders": [
    {
      "ami_block_device_mappings": [
        {
          "volume_size": "{{user `data_volume_size`}}",
          "delete_on_termination": true,
          "volume_type": "gp2",
          "device_name": "{{user `devicemap_data_b`}}"
        }
      ],
      "communicator": "ssh",
      "source_ami": "{{user `source_ami`}}",
      "name": "aws",
      "tags": {
        "Application Id": "Adobe Experience Manager (AEM)",
        "Name": "Packer Builder - {{user `component`}} AMI ({{user `version`}})",
        "Application Profile": "{{user `profile`}}",
        "Version": "{{user `version`}}",
        "OS Type": "{{user `os_type`}}",
        "Application Role": "{{user `component`}} AMI"
      },
      "subnet_id": "{{user `aws_subnet_id`}}",
      "ssh_username": "{{user `aws_user`}}",
      "region": "{{user `aws_region`}}",
      "ami_name": "{{user `component`}}-{{user `version`}}-{{timestamp}}",
      "iam_instance_profile": "{{ user `iam_instance_profile` }}",
      "security_group_id": "{{user `aws_security_group_id`}}",
      "instance_type": "{{user `instance_type`}}",
      "ami_description": "Packer AEM Bootstrap - {{user `component`}} AMI ({{user `version`}})",
      "run_tags": {
        "Application Id": "Adobe Experience Manager (AEM)",
        "Name": "Packer Builder - {{user `component`}} AMI ({{user `version`}})",
        "Application Profile": "{{user `profile`}}",
        "Version": "{{user `version`}}",
        "OS Type": "{{user `os_type`}}",
        "Application Role": "{{user `component`}} AMI"
      },
      "run_volume_tags": {
        "Application Id": "Adobe Experience Manager (AEM)",
        "Name": "Packer Builder - {{user `component`}} AMI ({{user `version`}})",
        "Application Profile": "{{user `profile`}}",
        "Version": "{{user `version`}}",
        "OS Type": "{{user `os_type`}}",
        "Application Role": "{{user `component`}} AMI"
      },
      "vpc_id": "{{user `aws_vpc_id`}}",
      "launch_block_device_mappings": [
        {
          "volume_size": "{{user `root_volume_size`}}",
          "delete_on_termination": true,
          "volume_type": "gp2",
          "device_name": "{{user `devicemap_root`}}"
        },
        {
          "volume_size": "{{user `data_volume_size`}}",
          "delete_on_termination": true,
          "volume_type": "gp2",
          "device_name": "{{user `devicemap_data_b`}}"
        }
      ],
      "ami_users": "{{user `ami_users`}}",
      "type": "amazon-ebs",
      "ssh_pty": true
    }
  ]
}
